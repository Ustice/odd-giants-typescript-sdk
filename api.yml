---
openapi: 3.0.0
info:
  contact:
    email: ustice@gmail.com
  description: Odd Giants Public API
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Odd Giants Public API
  version: 0.0.1
components:
  parameters:
    achievement_id:
      in: path
      name: achievement_id
      required: true
      schema:
        $ref: '#/components/schemas/achievement_id'
    category_id:
      in: path
      name: category_id
      required: true
      schema:
        $ref: '#/components/schemas/category_id'
    giant_id:
      in: path
      name: giant_id
      required: true
      schema:
        $ref: '#/components/schemas/giant_id'
    inhabitant_id:
      in: path
      name: inhabitant_id
      required: true
      schema:
        $ref: '#/components/schemas/inhabitant_id'
    item_id:
      in: path
      name: item_id
      required: true
      schema:
        $ref: '#/components/schemas/item_id'
    location_id:
      example: GCR105E77812AEF
      in: path
      name: location_id
      required: true
      schema:
        $ref: '#/components/schemas/location_id'
    region_id:
      in: path
      name: region_id
      required: true
      schema:
        $ref: '#/components/schemas/region_id'
    search_query:
      in: query
      name: search_query
      required: true
      schema:
        format: uri-encoded
        type: string
    skill_id:
      in: path
      name: skill_id
      required: true
      schema:
        $ref: '#/components/schemas/skill_id'
    upgrade_id:
      in: path
      name: upgrade_id
      required: true
      schema:
        $ref: '#/components/schemas/upgrade_id'
    user_id:
      in: path
      name: user_id
      required: true
      schema:
        $ref: '#/components/schemas/user_id'
  requestBodies:
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationCredentials'
      description: Authentication credentials
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Something went wrong
    GetAchievement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAchievementResponse'
      description: Successfully loaded Achievement
    GetAchievementsByCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAchievementsByCategoryResponse'
      description: Successfully loaded Achievement by category
    GetCategories:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCategoriesResponse'
      description: CategoryIndex
    GetGiant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GiantDetails'
      description: Successfully loaded Giant
    GetInhabitant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInhabitantResponse'
      description: Successfully loaded Inhabitant
    GetInhabitantsByCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInhabitantsByCategoryResponse'
      description: Sucessfully loaded Inhabitants by category
    GetItem:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetItemResponse'
      description: Successfully loaded Item
    GetItemsByCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetItemsByCategoryResponse'
      description: Sucessfully loaded Items by category
    GetMe:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMeResponse'
      description: Hey, it's you!
    GetRegion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRegionResponse'
      description: Successfully loaded Region
    GetSearch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSearchResponse'
      description: Successfully loaded search results
    GetServerStats:
      content:
        application/json:
          examples:
            example-0001:
              value:
                players_count: 771
                version: 0.9.3
          schema:
            $ref: '#/components/schemas/GetServerStatsResponse'
      description: Successfully loaded server stats
    GetSkill:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSkillResponse'
      description: Sucessfully loaded Inhabitants by category
    GetSkillsByCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSkillsByCategoryResponse'
      description: Sucessfully loaded Inhabitants by category
    GetUpgrade:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUpgradeResponse'
      description: Sucessfully loaded Inhabitants by category
    GetUpgradesByCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUpgradesByCategoryResponse'
      description: Sucessfully loaded Inhabitants by category
    GetUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserResponse'
      description: Successfully loaded user info
    GetUserAchievements:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserAchievementsResponse'
      description: Sucessfully loaded the given user's achievments
    GetUserSkills:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserSkillsResponse'
      description: Sucessfully loaded the User's Skills
    GetUserUpgrades:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserUpgradesResponse'
      description: Sucessfully loaded the User's Upgrades
    PostLogin:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
      description: Successful authentication
    PostLoginRefresh:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginRefreshResponse'
      description: The user has successfully refreshed their session
  schemas:
    Achievement:
      properties:
        category:
          $ref: '#/components/schemas/category_id'
        category_id:
          $ref: '#/components/schemas/category_id'
        conditions:
          items:
            properties:
              group:
                type: string
              label:
                nullable: true
                type: string
              type:
                enum:
                  - counter
                  - group_sum
                  - group_count
                type: string
              value:
                type: string
            title: AchievementCondition
            type: object
          type: array
        created_at:
          format: date-time
          type: string
        description:
          example: Visited 5 new locations.
          type: string
        id:
          $ref: '#/components/schemas/achievement_id'
        name:
          example: Junior OK Explorer
          type: string
        reward:
          $ref: '#/components/schemas/Reward'
        reward_currants:
          example: 0
          type: integer
        reward_energy:
          example: 0
          type: integer
        reward_giant:
          $ref: '#/components/schemas/giant_id'
        reward_giant_favor:
          example: 10
          type: integer
        reward_mood:
          example: 0
          type: integer
        reward_xp:
          example: 125
          type: integer
        status_text:
          example: Hey! You're getting pretty good at finding your way around.  You've earned a Junior OK Explorer badge.
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - category_id
        - name
        - description
        - status_text
        - conditions
        - reward_xp
        - reward_currants
        - reward_mood
        - reward_energy
        - reward_giant
        - reward_giant_favor
        - created_at
        - updated_at
        - reward
        - category
      type: object
    AchievementAchievement:
      allOf:
        - $ref: '#/components/schemas/Achievement'
        - $ref: '#/components/schemas/AchievementAchievementConnection'
      title: AchievementAchievement
    AchievementAchievementConnection:
      properties:
        achievement_id:
          $ref: '#/components/schemas/Achievement'
        connection_id:
          $ref: '#/components/schemas/Achievement'
      type: object
    AchievementConnections:
      properties:
        connections_from:
          items:
            $ref: '#/components/schemas/AchievementAchievement'
          type: array
        connections_to:
          items:
            $ref: '#/components/schemas/AchievementAchievement'
          type: array
        items:
          items:
            $ref: '#/components/schemas/AchievementItem'
          type: array
        required_for_recipes:
          items:
            $ref: '#/components/schemas/AchievementRecipe'
          type: array
        required_for_upgrades:
          items:
            $ref: '#/components/schemas/AchievementUpgrade'
          type: array
      required:
        - connections_from
        - connections_to
        - required_for_upgrades
        - required_for_recipes
        - items
      type: object
    AchievementDetails:
      allOf:
        - $ref: '#/components/schemas/Achievement'
        - $ref: '#/components/schemas/AchievementConnections'
      title: AchievementDetails
    AchievementItem:
      allOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/AchievementItemConnections'
      title: AchievementItem
    AchievementItemConnections:
      properties:
        achievement_id:
          $ref: '#/components/schemas/achievement_id'
        item_id:
          $ref: '#/components/schemas/item_id'
      required:
        - achievement_id
        - item_id
      type: object
    AchievementRecipe:
      allOf:
        - $ref: '#/components/schemas/Recipe'
        - $ref: '#/components/schemas/AchievementRecipeConnection'
      title: AchievementRecipe
    AchievementRecipeConnection:
      properties:
        pivot:
          properties:
            achievement_id:
              $ref: '#/components/schemas/achievement_id'
            recipe_id:
              $ref: '#/components/schemas/Recipe'
          title: AchievementRecipePivot
          type: object
      type: object
    AchievementUpgrade:
      allOf:
        - $ref: '#/components/schemas/Upgrade'
        - $ref: '#/components/schemas/AchievementUpgradeConnections'
      title: AchievementUpgrade
    AchievementUpgradeConnections:
      properties:
        pivot:
          properties:
            achievement_id:
              $ref: '#/components/schemas/achievement_id'
            upgrade_id:
              $ref: '#/components/schemas/upgrade_id'
          title: AchievementUpgradePivot
          type: object
      type: object
    AuthenticationCredentials:
      properties:
        email:
          example: user@domain.tld
          format: email
          type: string
        password:
          example: THIS_IS_A_BAD_PASSWORD
          type: string
        remember:
          example: true
          type: boolean
      required:
        - email
        - password
      type: object
    Category:
      description: Categories of entries in the encyclopedia
      properties:
        created_at:
          format: date
          type: string
        description:
          type: string
        id:
          $ref: '#/components/schemas/category_id'
        name:
          type: string
      required:
        - created_at
        - description
        - id
        - name
    CategoryIndex:
      description: Index of the Encyclopedia
      properties:
        achievements:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Category'
              type: array
          title: CategoryAchievements
          type: object
        giants:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Giant'
              type: array
          title: GiantList
          type: object
        inhabitants:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Category'
              type: array
          title: CategoryInhabitants
          type: object
        items:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Category'
              type: array
          title: CategoryItems
          type: object
        locations:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Region'
              type: array
          title: CategoryLocations
          type: object
        skills:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Category'
              type: array
          title: CategorySkills
          type: object
        upgrades:
          properties:
            categories:
              items:
                $ref: '#/components/schemas/Category'
              type: array
          title: CategoryUpgrades
          type: object
      required:
        - achievements
        - giants
        - inhabitants
        - items
        - locations
        - skills
        - upgrades
    ErrorResponse:
      properties:
        error:
          example: Something went wrong
          type: string
      required:
        - error
      type: object
    GetAchievementResponse:
      $ref: '#/components/schemas/AchievementDetails'
    GetAchievementsByCategoryResponse:
      items:
        $ref: '#/components/schemas/Achievement'
      type: array
    GetCategoriesResponse:
      $ref: '#/components/schemas/CategoryIndex'
    GetInhabitantResponse:
      $ref: '#/components/schemas/InhabitantDetails'
    GetInhabitantsByCategoryResponse:
      items:
        $ref: '#/components/schemas/Inhabitant'
      type: array
    GetItemResponse:
      $ref: '#/components/schemas/ItemDetails'
    GetItemsByCategoryResponse:
      items:
        $ref: '#/components/schemas/Item'
      type: array
    GetLocationResponse:
      $ref: '#/components/schemas/LocationDetails'
    GetMeResponse:
      $ref: '#/components/schemas/User'
    GetRegionResponse:
      $ref: '#/components/schemas/Location'
    GetSearchResponse:
      $ref: '#/components/schemas/SearchResults'
    GetServerStatsResponse:
      $ref: '#/components/schemas/ServerStats'
    GetSkillResponse:
      $ref: '#/components/schemas/SkillDetails'
    GetSkillsByCategoryResponse:
      items:
        $ref: '#/components/schemas/Skill'
      type: array
    GetUpgradeResponse:
      items:
        $ref: '#/components/schemas/UpgradeDetails'
      type: array
    GetUpgradesByCategoryResponse:
      items:
        $ref: '#/components/schemas/Upgrade'
      type: array
    GetUserAchievementsResponse:
      items:
        $ref: '#/components/schemas/UserAchievment'
      type: array
    GetUserResponse:
      $ref: '#/components/schemas/User'
    GetUserSkillsResponse:
      items:
        $ref: '#/components/schemas/UserSkill'
      type: array
    GetUserUpgradesResponse:
      items:
        $ref: '#/components/schemas/UserUpgrade'
      type: array
    Giant:
      properties:
        created_at:
          format: date-time
          type: string
        description:
          type: string
        followers_name:
          type: string
        gender:
          type: string
        id:
          $ref: '#/components/schemas/giant_id'
        name:
          type: string
        qualities:
          type: string
        type:
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - description
        - followers_name
        - gender
        - id
        - name
        - qualities
        - type
        - updated_at
        - created_at
      type: object
    GiantConnections:
      properties:
        skills:
          items:
            $ref: '#/components/schemas/GiantSkill'
          type: array
      required:
        - skills
      type: object
    GiantDetails:
      allOf:
        - $ref: '#/components/schemas/Giant'
        - $ref: '#/components/schemas/GiantConnections'
      title: GiantDetails
    GiantSkill:
      allOf:
        - $ref: '#/components/schemas/Skill'
        - $ref: '#/components/schemas/GiantSkillConnection'
      title: GiantSkill
    GiantSkillConnection:
      properties:
        pivot:
          properties:
            giant_id:
              $ref: '#/components/schemas/giant_id'
            primary:
              enum:
                - 0
                - 1
              type: integer
            skill_id:
              $ref: '#/components/schemas/skill_id'
          required:
            - giant_id
            - skill_id
            - primary
          title: GiantSkillPivot
          type: object
      required:
        - pivot
      type: object
    Inhabitant:
      properties:
        article:
          type: string
        category_id:
          $ref: '#/components/schemas/category_id'
        created_at:
          format: date-time
          type: string
        description:
          type: string
        has_infopage:
          example: 1
          type: integer
        id:
          $ref: '#/components/schemas/inhabitant_id'
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
        name:
          type: string
        name_plural:
          type: string
        updated_at:
          format: date-time
          type: string
      required:
        - article
        - category_id
        - created_at
        - description
        - has_infopage
        - id
        - items
        - name
        - name_plural
        - updated_at
    InhabitantConnections:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InhabitantItem'
          type: array
      required:
        - items
      type: object
    InhabitantDetails:
      allOf:
        - $ref: '#/components/schemas/Inhabitant'
        - $ref: '#/components/schemas/InhabitantConnections'
      title: InhabitantDetails
    InhabitantItem:
      allOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/InhabitantItemConnection'
      title: InhabitantItem
    InhabitantItemConnection:
      properties:
        pivot:
          properties:
            inhabitant_id:
              $ref: '#/components/schemas/inhabitant_id'
            item_id:
              $ref: '#/components/schemas/item_id'
          required:
            - inhabitant_id
            - item_id
          title: InhabitantItemPivot
          type: object
      required:
        - pivot
      type: object
    Item:
      properties:
        adjusted_scale:
          type: number
        article:
          enum:
            - a
            - the
          type: string
        base_cost:
          example: 1
          type: integer
        capacity:
          example: 1
          type: integer
        category_id:
          $ref: '#/components/schemas/category_id'
        created_at:
          format: date-time
          type: string
        description:
          type: string
        has_info:
          example: 1
          type: integer
        has_infopage:
          example: 1
          type: integer
        id:
          $ref: '#/components/schemas/item_id'
        is_routable:
          example: 1
          type: integer
        label:
          type: string
        name:
          type: string
        name_plural:
          type: string
        name_single:
          type: string
        parent_classes:
          items:
            type: string
          type: array
        stackmax:
          example: 1
          type: integer
        updated_at:
          format: date-time
          type: string
      required:
        - id
        - category_id
        - label
        - name_single
        - name_plural
        - article
        - description
        - has_info
        - has_infopage
        - is_routable
        - adjuested_scale
        - stackmax
        - capacity
        - base_cost
        - parent_classes
        - created_at
        - updated_at
        - name
        - recipes_tool
        - recipes_input
        - npcs
        - achievements
    ItemAchievement:
      allOf:
        - $ref: '#/components/schemas/Achievement'
        - $ref: '#/components/schemas/ItemAchievementConnection'
      title: ItemAchievement
    ItemAchievementConnection:
      properties:
        pivot:
          properties:
            achievement_id:
              $ref: '#/components/schemas/achievement_id'
            count:
              type: integer
            item_id:
              $ref: '#/components/schemas/item_id'
          required:
            - achievement_id
            - item_id
            - count
          title: ItemAchievementPivot
          type: object
      required:
        - pivot
      type: object
    ItemConnections:
      properties:
        achievements:
          items:
            $ref: '#/components/schemas/ItemAchievement'
          type: array
        npcs:
          items:
            $ref: '#/components/schemas/ItemInhabitant'
          type: array
        recipes_input:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
        recipes_output:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
        recipes_tool:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
      type: object
    ItemDetails:
      allOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/ItemConnections'
      title: ItemDetails
    ItemInhabitant:
      allOf:
        - $ref: '#/components/schemas/Inhabitant'
        - $ref: '#/components/schemas/ItemInhabitantConnection'
      title: ItemInhabitant
    ItemInhabitantConnection:
      properties:
        pivot:
          properties:
            item_id:
              $ref: '#/components/schemas/item_id'
            npc_id:
              $ref: '#/components/schemas/inhabitant_id'
          required:
            - item_id
            - npc_id
          title: ItemInhabitant
          type: object
      required:
        - pivot
      type: object
    Location:
      properties:
        contents:
          $ref: '#/components/schemas/LocationContents'
        created_at:
          $ref: '#/components/schemas/datetime'
        id:
          $ref: '#/components/schemas/location_id'
        label:
          description: the name of the location
          type: string
        region_id:
          $ref: '#/components/schemas/region_id'
        updated_at:
          format: date-time
          type: string
        user_id:
          $ref: '#/components/schemas/user_id'
      required:
        - contents
        - id
        - label
        - region_id
        - updated_id
        - user_id
    LocationConnection:
      properties:
        pivot:
          properties:
            connection_id:
              $ref: '#/components/schemas/location_id'
            location_id:
              $ref: '#/components/schemas/location_id'
          required:
            - location_id
            - connection_id
          title: LocationLocationPivot
          type: object
      required:
        - pivot
      type: object
    LocationConnections:
      properties:
        connections_from:
          $ref: '#/components/schemas/LocationLocation'
        connections_to:
          $ref: '#/components/schemas/LocationLocation'
        items:
          items:
            $ref: '#/components/schemas/LocationItem'
          type: array
        npcs:
          items:
            $ref: '#/components/schemas/LocationInhabitant'
          type: array
      required:
        - items
        - npcs
        - connections_from
        - connections_to
      type: object
    LocationContents:
      additionalProperties:
        oneOf:
          - description: Permenant resident population
            type: number
          - description: Current resident population
            pattern: ^[0-9]+$
            type: string
      type: object
    LocationDetails:
      allOf:
        - $ref: '#/components/schemas/Location'
        - $ref: '#/components/schemas/LocationConnections'
      title: LocationDetails
    LocationInhabitant:
      allOf:
        - $ref: '#/components/schemas/Inhabitant'
        - $ref: '#/components/schemas/LocationInhabitantConnection'
      title: LocationInhabitant
    LocationInhabitantConnection:
      properties:
        pivot:
          properties:
            location_id:
              $ref: '#/components/schemas/location_id'
            npc_id:
              $ref: '#/components/schemas/inhabitant_id'
            quantity:
              type: integer
          required:
            - location_id
            - npc_id
            - quantity
          title: LocationInhabitantPivot
          type: object
      required:
        - pivot
      type: object
    LocationItem:
      allOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/LocationItemConnection'
      title: LocationItem
    LocationItemConnection:
      properties:
        pivot:
          properties:
            item_id:
              $ref: '#/components/schemas/item_id'
            location_id:
              $ref: '#/components/schemas/location_id'
            quantity:
              type: integer
          required:
            - location_id
            - item_id
            - quantity
          title: LocationItemPivot
          type: object
      required:
        - pivot
      type: object
    LocationLocation:
      allOf:
        - $ref: '#/components/schemas/Location'
        - $ref: '#/components/schemas/LocationConnection'
      title: LocationLocation
    LoginRefreshResponse:
      $ref: '#/components/schemas/SessionInfo'
    LoginResponse:
      $ref: '#/components/schemas/SessionInfo'
    Recipe:
      properties:
        created_at:
          format: date-time
          type: string
        energy_cost:
          type: integer
        id:
          $ref: '#/components/schemas/recipe_id'
        items_input:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
        items_output:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
        items_tool:
          items:
            $ref: '#/components/schemas/RecipeItem'
          type: array
        learnt:
          description: Whether the recipe is accessable to the player
          enum:
            - 0
            - 1
          type: integer
        name:
          type: string
        npcs:
          items:
            $ref: '#/components/schemas/SkillDetails'
          type: array
        pivot:
          $ref: '#/components/schemas/RecipeItemConnection'
        required_achievements:
          items:
            $ref: '#/components/schemas/AchievementDetails'
          type: array
        task_limit:
          description: How many of the recipe can be made at once
          type: integer
        tool:
          $ref: '#/components/schemas/item_id'
        tool_wear:
          type: integer
        updated_at:
          format: date-time
          type: string
        wait_ms:
          description: How long the recipe takes to make
          type: integer
        xp_reward:
          type: integer
      required:
        - id
        - name
        - tool_wear
        - leanrt
        - energy_cost
        - xp_reward
        - wait_ms
        - task_limit
        - created_at
        - updated_at
        - pivot
        - items_tool
        - items_input
        - items_output
        - npcs
        - required_achievements
    RecipeItem:
      allOf:
        - $ref: '#/components/schemas/Item'
        - $ref: '#/components/schemas/RecipeItemConnection'
      title: RecipeItem
    RecipeItemConnection:
      properties:
        pivot:
          properties:
            item_id:
              $ref: '#/components/schemas/item_id'
            quantity:
              type: integer
            recipe_id:
              $ref: '#/components/schemas/recipe_id'
            type:
              enum:
                - input
              type: string
          required:
            - recipie_id
            - item_id
            - type
            - quantity
          title: RecipeItemPivot
          type: object
      required:
        - pivot
      type: object
    Region:
      properties:
        created_at:
          $ref: '#/components/schemas/datetime'
        id:
          $ref: '#/components/schemas/region_id'
    Reward:
      properties:
        currants:
          type: integer
        energy:
          type: integer
        giant:
          $ref: '#/components/schemas/giant_id'
        giant_favor:
          type: integer
        mood:
          type: integer
        xp:
          type: integer
    SearchResults:
      properties:
        achievements:
          items:
            $ref: '#/components/schemas/Achievement'
          type: array
        giants:
          items:
            $ref: '#/components/schemas/Giant'
          type: array
        inhabitants:
          items:
            $ref: '#/components/schemas/Inhabitant'
          type: array
        items:
          items:
            $ref: '#/components/schemas/Item'
          type: array
        locations:
          items:
            $ref: '#/components/schemas/Location'
          type: array
        regions:
          items:
            $ref: '#/components/schemas/Region'
          type: array
        skills:
          items:
            $ref: '#/components/schemas/Skill'
          type: array
      required:
        - skills
        - achievements
        - locations
        - regions
        - giants
        - items
        - inhabitants
      type: object
    ServerStats:
      properties:
        players_count:
          example: 771
          type: integer
        version:
          example: 0.9.3
          type: string
      required:
        - players_count
        - version
    SessionInfo:
      properties:
        access_token:
          example: >-
            fzK1fYBjPjKLW2RjMDKicHdjPjKTV{J2OjK:/fzKieXRjPjJzJjxjboSqJkpjZnJ3NEJzPHGlO{JxOUd1PXJx[ESmZ3Gl[HVzNUVzOER5N{Vy[kinN3Z{ZkV3ZXJ4PXV1PXNx[nR2N{ByNUVy[kZ6ZUB{[Uh2O{hy[URyN3RjMDKqZYRjPjJyOkRzNUJzOUN3MkF{O{Z3OTJtJn6j[jJ7JkF3OEJyNkJ2N{ZvNUN4OkdyJjxj[YixJkpjNUZ1NkFzOkF{Oj5xPEhzPEFjMDK{eXJjPjJ2O{JjMDK{Z3:x[YNjPmuegR/URlwbjFzQyzcXx9fVES6LJdv.dIL{i`Ebc2cd6`CJ3mc9lBlsRRDtNdZ9HY6Rg583k[lF4XJZL`[bGb`UNm`TBFVfPkjeE85Bmhdo.zHJtW8DBHJB46:Isw4{reXgp9BUz1gH77qCttH.DSW1xguLV4Lf`zDqSmt6d`SnZrX{BqpQqXFfZLomrQB[gpu:e6DFp1{nWIsSECszPiPH{VeDIjmz5g1wxxx71OH73MjBl.DdX7j9FZbRyigDDCwxSeQ`f7ITJFowPLJKy.wvSNHufOLkjmfED7rsHI8[y:e[51I33j3VLzbph7vjbStqH`1u1V6YDZcq:4f{Wyf{ZIxSo3Tu5jHJhTb2KLhv2XhWIMfzrbhFLURlGK9POJmOoOZXdhB8DF:3OC4UmJBi2YtukXsH[7VQ6sDl`MBGEpwFDjub2Wv[I2cRez[qWEpOUtI2WrKq:KgXt2[VXZ962l[T:7p4Y61SvhCpsN62GIm1hV6JBKOxuXu3q9E2T{92cIGsL8f:JhwEjvpRFzLR8ExDKHyrU{PkUUJt82IdTWNnUdY.VQ8DN4YuujHVbuxRue:Mvr`SO1Gd5eZgZ8jqts2XsmfXCLd4zgEMrP[eLT1DHlfw3XoMxKzxjQw[3U29uf8JGpWol1vPBv`yyEZeU7RLke9pNEMEY4eZ2hv1si4XGt
          type: string
        expires_in:
          example: 3600
          type: string
        refresh_token:
          example: >-
            efg6131142g0gc459d02d43ed4c115g17cgeg7824970621c3602d9490ee45g855685b123130gc8012cgc5cdfc2g347fb52d60301df2g982549440028487175c9bbefb0b440gb9bg886ee92999d0893c9g321384b1f0482c5c1d8dgg7d2b98450ed66f7640d74f3ef67gf5gg9dcdcfb10f650e3bdde68ed87b171ccbb89bd3g2c19171e538e5464bd1gf8gf31b8e1c8703552c809204ff619870346c985024115bb3435begge6805e2696356g219f30355662bcff7302bc6893c358ebd3545f15g6dg40d21b8bg1697g0923fd2c69ceb9be0g31c405f6814973635b5445d2ccbfe2bd487379e6e3468g10c1ge1b9e3fb5e8959g96eb5d13gfff976ee7ge478173g205d0276g0105397cf2g55cb33d1ebb5c6gc90db526d11e8506ff05185d71dg67b32dg022f18gfgc0b033cbb928gbg7c10e93561499d8cd9b8d5051ecb9e2562f912506ee55g8e16b0dg74g51b377g4134f496ce8b233fedd1g489fe40e21b0808f16
          type: string
        remember:
          example: true
          type: boolean
      required:
        - access_token
        - refresh_token
        - expires_in
        - remember
      type: object
    Skill:
      properties:
        category_id:
          $ref: '#/components/schemas/category_id'
        created_at:
          $ref: '#/components/schemas/datetime'
        description:
          example: This is the first step towards a better relationship with plant life of all kinds.  It ensures success when watering and petting trees and plants, halves the time  required to water and gives some modest imagination rewards.
          type: string
        group:
          example: light
          type: string
        id:
          $ref: '#/components/schemas/skill_id'
        level:
          example: 1
          type: integer
        name:
          example: Light Green Thumb I
          type: string
        point_cost:
          example: 600
          type: integer
        quest_id:
          $ref: '#/components/schemas/quest_id'
        req_quests:
          items:
            $ref: '#/components/schemas/quest_id'
          type: array
        requires_level:
          example: 0
          type: integer
        updated_at:
          $ref: '#/components/schemas/datetime'
      required:
        - id
        - category_id
        - name
        - group
        - level
        - description
        - point_cost
        - requires_level
        - quest_id
        - req_quests
        - created_at
        - updated_at
    SkillConnections:
      properties:
        giants:
          items:
            $ref: '#/components/schemas/SkillGiant'
          type: array
        learned:
          example: 'With Light Green Thumb, you''ve just taken a step into a bigger world. A world where you grok plants, and they grok you right back. Armed with your trusty Watering Can, you will now enjoy some modest rewards now that you know how to water and pet the veg properly, and at twice the speed to boot. '
          type: string
        required_achievements:
          items:
            $ref: '#/components/schemas/AchievementDetails'
          type: array
        required_for_achievements:
          items:
            $ref: '#/components/schemas/AchievementDetails'
          type: array
        required_for_recipes:
          items:
            $ref: '#/components/schemas/Recipe'
          type: array
        required_for_skills:
          items:
            $ref: '#/components/schemas/SkillDetails'
          type: array
        required_for_upgrades:
          items:
            $ref: '#/components/schemas/UpgradeDetails'
          type: array
        required_skills:
          items:
            $ref: '#/components/schemas/SkillDetails'
          type: array
        required_upgrades:
          items:
            $ref: '#/components/schemas/UpgradeDetails'
          type: array
      required:
        - learned
        - required_skills
        - required_achievements
        - required_upgrades
        - required_for_skills
        - required_for_achievements
        - required_for_upgrades
        - required_for_recipes
        - giants
      type: object
    SkillDetails:
      allOf:
        - $ref: '#/components/schemas/Skill'
        - $ref: '#/components/schemas/SkillConnections'
      title: SkillDetails
    SkillGiant:
      allOf:
        - $ref: '#/components/schemas/Giant'
        - $ref: '#/components/schemas/SkillGiantConnections'
      title: SkillGiant
    SkillGiantConnections:
      properties:
        pivot:
          properties:
            giant_id:
              $ref: '#/components/schemas/giant_id'
            primary:
              enum:
                - 0
                - 1
              type: integer
            skill_id:
              $ref: '#/components/schemas/skill_id'
          title: SkillGiantPivot
          type: object
      type: object
    Upgrade:
      properties:
        category_id:
          $ref: '#/components/schemas/category_id'
        chance:
          type: integer
        conditions:
          items:
            $ref: '#/components/schemas/UpgradeCondition'
          type: array
        cost:
          type: integer
        created_at:
          format: date-time
          type: string
        desc:
          example: 'Life''s a lot less fun on an empty tank: make yours bigger!'
          type: string
        description:
          example: 'Life''s a lot less fun on an empty tank: make yours bigger!'
          type: string
        display_name:
          example: Energy Tank Increase
          type: string
        id:
          $ref: '#/components/schemas/upgrade_id'
        max_uses:
          type: integer
        name:
          example: Energy Tank +{amount}
          type: string
        requires_level:
          type: integer
        requires_max_energy:
          type: integer
        rewards:
          items:
            $ref: '#/components/schemas/UpgradeReward'
          type: array
        updated_at:
          format: date-time
          type: string
        upgrade_id:
          $ref: '#/components/schemas/upgrade_id'
        value:
          example: '190'
          type: string
      required:
        - id
        - category_id
        - name
        - display_name
        - description
        - cost
        - max_uses
        - chance
        - conditions
        - rewards
        - requires_level
        - requires_max_energy
        - created_at
        - updated_at
        - value
        - upgrade_id
        - desc
    UpgradeAchievement:
      allOf:
        - $ref: '#/components/schemas/Achievement'
        - $ref: '#/components/schemas/UpgradeAchievementConnection'
      title: UpgradeAchievement
    UpgradeAchievementConnection:
      properties:
        achievement_id:
          $ref: '#/components/schemas/achievement_id'
        upgrade_id:
          $ref: '#/components/schemas/upgrade_id'
      required:
        - upgrade_id
        - achievement_id
      type: object
    UpgradeCondition:
      discriminator:
        mapping:
          '1': '#/components/schemas/UpgradeConditionNull'
          '2': '#/components/schemas/UpgradeConditionLevel'
          '3': '#/components/schemas/UpgradeConditionUpgrade'
          '4': '#/components/schemas/UpgradeConditionSkill'
          '5': '#/components/schemas/UpgradeConditionAchievement'
          '6': '#/components/schemas/UpgradeConditionQuest'
          '7': '#/components/schemas/UpgradeConditionMaxEnergy'
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/UpgradeConditionNull'
        - $ref: '#/components/schemas/UpgradeConditionLevel'
        - $ref: '#/components/schemas/UpgradeConditionUpgrade'
        - $ref: '#/components/schemas/UpgradeConditionSkill'
        - $ref: '#/components/schemas/UpgradeConditionAchievement'
        - $ref: '#/components/schemas/UpgradeConditionQuest'
        - $ref: '#/components/schemas/UpgradeConditionMaxEnergy'
    UpgradeConditionAchievement:
      properties:
        achievement_id:
          type: string
        type:
          enum:
            - 5
          type: number
      required:
        - type
      type: object
    UpgradeConditionLevel:
      properties:
        level:
          type: integer
        type:
          enum:
            - 2
          type: number
      required:
        - type
      type: object
    UpgradeConditionMaxEnergy:
      properties:
        max_energy:
          type: string
        type:
          enum:
            - 7
          type: number
      required:
        - type
      type: object
    UpgradeConditionNull:
      properties:
        type:
          enum:
            - 1
          type: number
      required:
        - type
      type: object
    UpgradeConditionQuest:
      properties:
        quest_id:
          type: string
        type:
          enum:
            - 6
          type: number
      required:
        - type
      type: object
    UpgradeConditionSkill:
      properties:
        skill_id:
          type: string
        type:
          enum:
            - 4
          type: number
      required:
        - type
      type: object
    UpgradeConditionUpgrade:
      properties:
        imagination_id:
          type: string
        type:
          enum:
            - 3
          type: number
      required:
        - type
      type: object
    UpgradeConnections:
      properties:
        required_achievements:
          items:
            $ref: '#/components/schemas/UpgradeAchievement'
          type: array
        required_for_skills:
          items:
            $ref: '#/components/schemas/UpgradeSkill'
          type: array
        required_skills:
          items:
            $ref: '#/components/schemas/UpgradeSkill'
          type: array
        required_upgrades:
          items:
            $ref: '#/components/schemas/UpgradeUpgrade'
          type: array
      required:
        - required_skills
        - required_achievements
        - required_upgrades
        - required_for_skills
      type: object
    UpgradeDetails:
      allOf:
        - $ref: '#/components/schemas/Upgrade'
        - $ref: '#/components/schemas/UpgradeConnections'
      title: UpgradeDetails
    UpgradeReward:
      discriminator:
        mapping:
          '1': '#/components/schemas/UpgradeRewardMovement'
          '2': '#/components/schemas/UpgradeRewardKeepable'
          '3': '#/components/schemas/UpgradeRewardLearning'
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/UpgradeRewardMovement'
        - $ref: '#/components/schemas/UpgradeRewardKeepable'
        - $ref: '#/components/schemas/UpgradeRewardLearning'
    UpgradeRewardKeepable:
      properties:
        class_id:
          $ref: '#/components/schemas/item_id'
        num:
          description: number of keepables rewarded
          nullable: true
          type: integer
        type:
          enum:
            - 8
          type: integer
      required:
        - num
        - type
        - class_id
      type: object
    UpgradeRewardLearning:
      properties:
        type:
          enum:
            - 9
          type: integer
      required:
        - type
      type: object
    UpgradeRewardMovement:
      properties:
        can_3_jump:
          nullable: true
          type: boolean
        can_wall_jump:
          nullable: true
          type: boolean
        gravity:
          nullable: true
          type: number
        multiplier_3_jump:
          nullable: true
          type: number
        type:
          enum:
            - 1
          type: integer
        vx_max:
          description: Represents walking speed
          nullable: true
          type: number
        vy_jump:
          example: 0.907
          nullable: true
          type: number
      required:
        - type
        - vx_max
        - gravity
        - vy_jump
        - can_3_jump
        - can_wall_jump
        - multiplier_3_jump
      type: object
    UpgradeSkill:
      allOf:
        - $ref: '#/components/schemas/Skill'
        - $ref: '#/components/schemas/UpgradeSkillConnection'
      title: UpgradeSkill
    UpgradeSkillConnection:
      properties:
        pivot:
          properties:
            skill_id:
              $ref: '#/components/schemas/skill_id'
            upgrade_id:
              $ref: '#/components/schemas/upgrade_id'
          required:
            - upgrade_id
            - skill_id
          title: UpgradeSkillPivot
          type: object
      required:
        - pivot
      type: object
    UpgradeUpgrade:
      allOf:
        - $ref: '#/components/schemas/Upgrade'
        - $ref: '#/components/schemas/UpgradeUpgradeConnection'
      title: UpgradeUpgrade
    UpgradeUpgradeConnection:
      properties:
        pivot:
          properties:
            required_upgrade_id:
              $ref: '#/components/schemas/upgrade_id'
            upgrade_id:
              $ref: '#/components/schemas/upgrade_id'
          required:
            - upgrade_id
            - required_for_upgrade
          title: UpgradeUpgradePivot
          type: object
      required:
        - pivot
      type: object
    User:
      properties:
        avatarImage:
          example: avatars/avatar-572.png
          format: url
          pattern: ^avatars\/avatar-\d+$
          type: string
        created_at:
          example: '2021-09-17 18:44:00'
          format: date-time
          type: string
        energy:
          example: 176
          type: integer
        id:
          $ref: '#/components/schemas/user_id'
        last_achievement:
          $ref: '#/components/schemas/Category'
        last_location:
          $ref: '#/components/schemas/Location'
        last_login:
          example: '2021-09-17 18:44:00'
          format: date-time
          type: string
        last_seen_social:
          example: 771-upgrade-10725 2022-01-14 00:58:17
          pattern: ' \d{4}-\d\d-\d\d \d\d:\d\d:\d\d$'
          type: string
        last_skill:
          $ref: '#/components/schemas/Skill'
        last_upgrade:
          $ref: '#/components/schemas/Upgrade'
        level:
          example: 8
          type: integer
        location_id:
          example: GLI2HHRC84F1TJ6
          pattern: ^[A-Z0-9]{15}$
          type: string
        mood:
          example: 82
          type: integer
        name:
          example: Ustice
          type: string
        registered:
          example: '2022-01-11 06:11:43'
          format: date-time
          type: string
      required:
        - avatarImage
        - created_at
        - energy
        - id
        - last_login
        - last_seen_social
        - level
        - location_id
        - mood
        - name
      type: object
    UserAchievementConnections:
      properties:
        pivot:
          properties:
            achievement_id:
              $ref: '#/components/schemas/achievement_id'
            user_id:
              $ref: '#/components/schemas/user_id'
          required:
            - user_id
            - achievement_id
          title: UserAchievementPivot
          type: object
      required:
        - pivot
      type: object
    UserAchievment:
      allOf:
        - $ref: '#/components/schemas/Achievement'
        - $ref: '#/components/schemas/UserAchievementConnections'
      title: UserAchievment
    UserSkill:
      allOf:
        - $ref: '#/components/schemas/Skill'
        - $ref: '#/components/schemas/UserSkillConnections'
      properties:
        category_id:
          $ref: '#/components/schemas/category_id'
        created_at:
          $ref: '#/components/schemas/datetime'
        description:
          example: This is the first step towards a better relationship with plant life of all kinds.  It ensures success when watering and petting trees and plants, halves the time  required to water and gives some modest imagination rewards.
          type: string
        group:
          example: light
          type: string
        id:
          $ref: '#/components/schemas/skill_id'
        learned:
          example: 1
          type: integer
        level:
          example: 1
          type: integer
        name:
          example: Light Green Thumb I
          type: string
        pivot:
          $ref: '#/components/schemas/UserSkillConnection'
        point_cost:
          example: 600
          type: integer
        quest_id:
          $ref: '#/components/schemas/quest_id'
        req_quests:
          items:
            $ref: '#/components/schemas/quest_id'
          type: array
        requires_level:
          example: 0
          type: integer
        skill_id:
          $ref: '#/components/schemas/skill_id'
        updated_at:
          $ref: '#/components/schemas/datetime'
      title: UserSkill
    UserSkillConnection:
      properties:
        skill_id:
          $ref: '#/components/schemas/skill_id'
        user_id:
          $ref: '#/components/schemas/user_id'
      type: object
    UserSkillConnections:
      properties:
        ends:
          $ref: '#/components/schemas/datetime'
        learned:
          description: Indicates whether a user has learned the skill.
          enum:
            - 0
            - 1
          type: integer
        pivot:
          properties:
            skill_id:
              $ref: '#/components/schemas/skill_id'
            user_id:
              $ref: '#/components/schemas/user_id'
          required:
            - user_id
            - skill_id
          title: UserSkillPivot
          type: object
        starts:
          $ref: '#/components/schemas/datetime'
      required:
        - pivot
        - learned
        - starts
        - ends
      type: object
    UserUpgrade:
      allOf:
        - $ref: '#/components/schemas/Upgrade'
        - $ref: '#/components/schemas/UserUpgradeConnection'
      title: UserUpgrade
    UserUpgradeConnection:
      properties:
        pivot:
          properties:
            upgrade_id:
              $ref: '#/components/schemas/upgrade_id'
            user_id:
              $ref: '#/components/schemas/user_id'
          required:
            - user_id
            - upgrade_id
          title: UserUpgradePivot
          type: object
      required:
        - pivot
      type: object
    achievement_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    category_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    datetime:
      format: datetime
      type: string
    giant_id:
      enum:
        - alph
        - cosma
        - friendly
        - grendaline
        - humbaba
        - lem
        - mab
        - pot
        - spriggan
        - tii
        - zille
      type: string
    inhabitant_id:
      pattern: ^npc_[a-z_0-9]+$
      type: string
    item_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    location_id:
      description: Identifier for the Location Model
      example: GCR105E77812AEF
      format: ^[0-9A-Z]{15}$
      type: string
    quest_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    recipe_id:
      type: integer
    region_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    skill_id:
      pattern: ^[a-z][a-z_0-9]+$
      type: string
    upgrade_id:
      pattern: ^[a-z][a-z_0-9]*$
      type: string
    user_id:
      description: Identifier for the User Model
      example: 572
      type: integer
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
paths:
  /configs:
    get:
      description: ''
      operationId: serverStats
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/GetServerStats'
      summary: 'List '
      tags:
        - OddGiants
    parameters: []
  /encyclepedia/categories:
    get:
      description: Categories of information available within the encyclopedia/api
      operationId: categories
      responses:
        '200':
          $ref: '#/components/responses/GetCategories'
      tags:
        - OddGiants
  /encyclopedia/achievement/{achievement_id}:
    get:
      description: Gets Achievement details
      operationId: achievement
      responses:
        '200':
          $ref: '#/components/responses/GetAchievement'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/achievement_id'
  /encyclopedia/achievments/{category_id}:
    get:
      description: Get Achievements by category
      operationId: achievementsByCategory
      parameters:
        - $ref: '#/components/parameters/category_id'
      responses:
        '200':
          $ref: '#/components/responses/GetAchievementsByCategory'
      tags:
        - OddGiants
  /encyclopedia/giants/{giant_id}:
    get:
      operationId: giant
      responses:
        '200':
          $ref: '#/components/responses/GetGiant'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/giant_id'
  /encyclopedia/inhabitant/{inhabitant_id}:
    get:
      operationId: inhabitant
      responses:
        '200':
          $ref: '#/components/responses/GetInhabitant'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/inhabitant_id'
  /encyclopedia/inhabitants/{category_id}:
    get:
      operationId: inhabitantsByCategory
      responses:
        '200':
          $ref: '#/components/responses/GetInhabitantsByCategory'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/category_id'
  /encyclopedia/item/{item_id}:
    get:
      description: Item information
      operationId: item
      responses:
        '200':
          $ref: '#/components/responses/GetItem'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/item_id'
  /encyclopedia/items/{category_id}:
    get:
      description: List items by category
      operationId: itemsByCategory
      responses:
        '200':
          $ref: '#/components/responses/GetItemsByCategory'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/category_id'
  /encyclopedia/location/{location_id}:
    get:
      description: Locations around Ur
      operationId: location
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLocationResponse'
          description: Location loaded
      tags:
        - OddGiants
    parameters:
      - in: path
        name: location_id
        required: true
        schema:
          $ref: '#/components/schemas/location_id'
  /encyclopedia/locations/{region_id}:
    get:
      description: Locations around Ur
      operationId: region
      responses:
        '200':
          $ref: '#/components/responses/GetRegion'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/region_id'
  /encyclopedia/search:
    get:
      description: Search
      operationId: search
      responses:
        '200':
          $ref: '#/components/responses/GetSearch'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/search_query'
  /encyclopedia/skill/{skill_id}:
    get:
      description: Get Skill
      operationId: skill
      responses:
        '200':
          $ref: '#/components/responses/GetSkill'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/skill_id'
  /encyclopedia/skills/{category_id}:
    get:
      description: Get Skill by category
      operationId: skillsByCategory
      responses:
        '200':
          $ref: '#/components/responses/GetSkillsByCategory'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/category_id'
  /encyclopedia/upgrade/{upgrade_id}:
    get:
      description: Gets the details of an Upgrade
      operationId: upgrade
      responses:
        '200':
          $ref: '#/components/responses/GetUpgrade'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/upgrade_id'
  /encyclopedia/upgrades/{category_id}:
    get:
      description: Get Upgradse by category
      operationId: upgradesByCategory
      responses:
        '200':
          $ref: '#/components/responses/GetUpgradesByCategory'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/category_id'
  /login:
    post:
      description: |
        User's provide an email address and password to gain access to authenticated routes.
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        '200':
          $ref: '#/components/responses/PostLogin'
        '302':
          description: The user failed to log in successfully
      summary: Logs in a user
      tags:
        - OddGiants
  /login/refresh:
    post:
      description: By sending the refresh_token, the user is able to refresh their session.
      operationId: loginRefresh
      responses:
        '200':
          $ref: '#/components/responses/PostLoginRefresh'
        '400':
          $ref: '#/components/responses/Error'
      summary: Refreshes the user's session
      tags:
        - OddGiants
  /users:
    get:
      description: Gets the authenticated user
      operationId: me
      responses:
        '200':
          $ref: '#/components/responses/GetMe'
      summary: Gets the authenticated user
      tags:
        - OddGiants
  /users/{user_id}:
    get:
      description: Gets information about a specific user
      operationId: user
      responses:
        '200':
          $ref: '#/components/responses/GetUser'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/user_id'
  /users/{user_id}/achievments:
    get:
      description: Gets the achievments for a given user
      operationId: userAchievements
      responses:
        '200':
          $ref: '#/components/responses/GetUserAchievements'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/user_id'
  /users/{user_id}/skills:
    get:
      description: Gets the skills for a given user
      operationId: userSkills
      responses:
        '200':
          $ref: '#/components/responses/GetUserSkills'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/user_id'
  /users/{user_id}/upgrades:
    get:
      description: Gets the upgrades for a given user
      operationId: userUpgrades
      responses:
        '200':
          $ref: '#/components/responses/GetUserUpgrades'
      tags:
        - OddGiants
    parameters:
      - $ref: '#/components/parameters/user_id'
security:
  - BearerAuth: []
servers:
  - description: Odd Giants Public API
    url: https://api.oddgiants.com/public
tags:
  - description: API for game data
    name: OddGiants